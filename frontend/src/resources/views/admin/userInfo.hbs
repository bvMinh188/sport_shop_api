<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h3 class="card-title mb-0">Thông Tin Người Dùng</h3>
                        {{#if totalPages}}
                        <nav aria-label="Page navigation" class="mb-0">
                            <ul class="pagination mb-0">
                                <li class="page-item {{#if (eq currentPage 1)}}disabled{{/if}}">
                                    <a class="page-link" href="?page={{subtract currentPage 1}}" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                                {{#times totalPages}}
                                <li class="page-item {{#if (eq this ../currentPage)}}active{{/if}}">
                                    <a class="page-link" href="?page={{this}}">{{this}}</a>
                                </li>
                                {{/times}}
                                <li class="page-item {{#if (eq currentPage totalPages)}}disabled{{/if}}">
                                    <a class="page-link" href="?page={{add currentPage 1}}" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                        {{/if}}
                    </div>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 5%">STT</th>
                                    <th style="width: 20%">Tên người dùng</th>
                                    <th style="width: 25%">Email</th>
                                    <th style="width: 10%">Vai trò</th>
                                    <th style="width: 20%">Ngày tạo</th>
                                    <th style="width: 20%">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="user-table-body">
                                <!-- Render user rows here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận sẽ được render động bằng JS -->

<style>
.action-buttons {
    display: flex;
    gap: 5px;
    justify-content: center;
}

.btn-sm {
    padding: 0.25rem 0.5rem;
}

.table th {
    background-color: #f8f9fa;
    border-bottom: 2px solid #dee2e6;
    vertical-align: middle;
}

.table td {
    vertical-align: middle;
    padding: 0.5rem;
}

.badge {
    font-weight: 500;
    padding: 0.5em 0.75em;
}

/* Style cho modal */
.modal-content {
    border-radius: 8px;
    border: none;
}

.modal-header {
    border-bottom: 1px solid #dee2e6;
    padding: 1rem;
}

.modal-body {
    padding: 1rem;
}

.modal-footer {
    border-top: 1px solid #dee2e6;
    padding: 1rem;
}

.btn {
    border-radius: 4px;
    font-weight: 500;
}

.btn i {
    margin-right: 5px;
}

/* Style cho phân trang */
.pagination {
    margin-bottom: 0;
}

.page-link {
    padding: 0.375rem 0.75rem;
}

.page-item.active .page-link {
    background-color: #0d6efd;
    border-color: #0d6efd;
}

.alert {
    margin-bottom: 1rem;
}

.alert:last-child {
    margin-bottom: 0;
}

.d-none {
    display: none !important;
}

.modal-body .confirm-message {
    margin-bottom: 1rem;
}

.spinner-border {
    width: 1rem;
    height: 1rem;
    margin-right: 0.5rem;
}

.btn:disabled {
    cursor: not-allowed;
    opacity: 0.65;
}

/* New styles for role buttons */
.btn-warning {
    background-color: #ffc107;
    border-color: #ffc107;
    color: #000;
}

.btn-warning:hover {
    background-color: #ffca2c;
    border-color: #ffc720;
    color: #000;
}

.btn-primary {
    background-color: #0d6efd;
    border-color: #0d6efd;
}

.btn-primary:hover {
    background-color: #0b5ed7;
    border-color: #0a58ca;
}

.badge.bg-danger {
    background-color: #dc3545 !important;
}

.badge.bg-primary {
    background-color: #0d6efd !important;
}
</style>

<script>
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

function formatDate(dateStr) {
    const d = new Date(dateStr);
    return d.toLocaleDateString('vi-VN');
}

function renderUsers(users) {
    const tbody = document.getElementById('user-table-body');
    tbody.innerHTML = '';
    users.forEach((user, index) => {
        const tr = document.createElement('tr');
        tr.innerHTML = `
            <td class="text-center">${index + 1}</td>
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td class="text-center">
                <span class="badge rounded-pill ${user.role === 'admin' ? 'bg-danger' : 'bg-primary'}">
                    ${user.role}
                </span>
            </td>
            <td class="text-center">${formatDate(user.createdAt)}</td>
            <td>
                <div class="action-buttons">
                    ${user.role === 'admin'
                        ? `<button class="btn btn-primary btn-sm" onclick="openSetUserModal('${user._id}', '${user.username}')"><i class='fas fa-user'></i> Set User</button>`
                        : `<button class="btn btn-warning btn-sm" onclick="openSetAdminModal('${user._id}', '${user.username}')"><i class='fas fa-user-shield'></i> Set Admin</button>`
                    }
                    <button class="btn btn-danger btn-sm" onclick="openDeleteModal('${user._id}', '${user.username}')"><i class="fas fa-trash"></i> Xóa</button>
                </div>
            </td>
        `;
        tbody.appendChild(tr);
    });
}

async function fetchUsers() {
    try {
        const token = getCookie('token') || localStorage.getItem('token');
        const response = await fetch('http://localhost:3000/api/allusers', {
            headers: { 'Authorization': `Bearer ${token}` },
            credentials: 'include'
        });
        const data = await response.json();
        if (data.success) {
            renderUsers(data.data.users);
        }
    } catch (error) {
        alert('Có lỗi khi tải danh sách người dùng');
    }
}

// Modal helpers
function showModal(html) {
    let modalDiv = document.getElementById('dynamic-modal');
    if (!modalDiv) {
        modalDiv = document.createElement('div');
        modalDiv.id = 'dynamic-modal';
        document.body.appendChild(modalDiv);
    }
    modalDiv.innerHTML = html;
    const modal = new bootstrap.Modal(modalDiv.querySelector('.modal'));
    modal.show();
}

function openDeleteModal(userId, userName) {
    showModal(`
        <div class="modal fade show" tabindex="-1" style="display:block;" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Xác nhận xóa</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeDynamicModal()"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-warning mb-0">
                            Bạn có chắc chắn muốn xóa người dùng <strong>${userName}</strong>?
                        </div>
                        <div id="message-container"></div>
                    </div>
                    <div class="modal-footer" style="justify-content: center; gap: 10px;">
                        <button type="button" class="btn btn-secondary" onclick="closeDynamicModal()">Không</button>
                        <button type="button" class="btn btn-danger" onclick="confirmDeleteUser('${userId}')">Có</button>
                    </div>
                </div>
            </div>
        </div>
    `);
}

function openSetAdminModal(userId, userName) {
    showModal(`
        <div class="modal fade show" tabindex="-1" style="display:block;" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Xác nhận cấp quyền Admin</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeDynamicModal()"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-warning mb-0">
                            Bạn có chắc chắn muốn cấp quyền Admin cho <strong>${userName}</strong>?
                        </div>
                        <div id="message-container"></div>
                    </div>
                    <div class="modal-footer" style="justify-content: center; gap: 10px;">
                        <button type="button" class="btn btn-secondary" onclick="closeDynamicModal()">Không</button>
                        <button type="button" class="btn btn-warning" onclick="confirmSetAdmin('${userId}')">Có</button>
                    </div>
                </div>
            </div>
        </div>
    `);
}

function openSetUserModal(userId, userName) {
    showModal(`
        <div class="modal fade show" tabindex="-1" style="display:block;" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Xác nhận hạ quyền User</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" onclick="closeDynamicModal()"></button>
                    </div>
                    <div class="modal-body">
                        <div class="alert alert-warning mb-0">
                            Bạn có chắc chắn muốn hạ quyền User cho <strong>${userName}</strong>?
                        </div>
                        <div id="message-container"></div>
                    </div>
                    <div class="modal-footer" style="justify-content: center; gap: 10px;">
                        <button type="button" class="btn btn-secondary" onclick="closeDynamicModal()">Không</button>
                        <button type="button" class="btn btn-primary" onclick="confirmSetUser('${userId}')">Có</button>
                    </div>
                </div>
            </div>
        </div>
    `);
}

function closeDynamicModal() {
    const modalDiv = document.getElementById('dynamic-modal');
    if (modalDiv) modalDiv.innerHTML = '';
}

// API actions
async function confirmDeleteUser(userId) {
    const token = getCookie('token') || localStorage.getItem('token');
    try {
        const response = await fetch(`http://localhost:3000/api/users/${userId}`, {
            method: 'DELETE',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        const result = await response.json();
        const msg = document.getElementById('message-container');
        if (result.success) {
            msg.innerHTML = `<div class="alert alert-success">${result.message}</div>`;
            setTimeout(() => { window.location.reload(); }, 1500);
        } else {
            msg.innerHTML = `<div class="alert alert-danger">${result.message}</div>`;
        }
    } catch (error) {
        document.getElementById('message-container').innerHTML = `<div class="alert alert-danger">Có lỗi xảy ra khi xóa người dùng</div>`;
    }
}

async function confirmSetAdmin(userId) {
    const token = getCookie('token') || localStorage.getItem('token');
    try {
        const response = await fetch(`http://localhost:3000/api/users/${userId}/setadmin`, {
            method: 'PUT',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        const result = await response.json();
        const msg = document.getElementById('message-container');
        if (result.success) {
            msg.innerHTML = `<div class="alert alert-success">${result.message || 'Cấp quyền Admin thành công!'}</div>`;
            setTimeout(() => { window.location.reload(); }, 1500);
        } else {
            msg.innerHTML = `<div class="alert alert-danger">${result.message || 'Có lỗi xảy ra khi cấp quyền Admin'}</div>`;
        }
    } catch (error) {
        document.getElementById('message-container').innerHTML = `<div class="alert alert-danger">Có lỗi xảy ra khi cấp quyền Admin</div>`;
    }
}

async function confirmSetUser(userId) {
    const token = getCookie('token') || localStorage.getItem('token');
    try {
        const response = await fetch(`http://localhost:3000/api/users/${userId}/setuser`, {
            method: 'PUT',
            headers: { 'Authorization': `Bearer ${token}` }
        });
        const result = await response.json();
        const msg = document.getElementById('message-container');
        if (result.success) {
            msg.innerHTML = `<div class="alert alert-success">${result.message || 'Hạ quyền User thành công!'}</div>`;
            setTimeout(() => { window.location.reload(); }, 1500);
        } else {
            msg.innerHTML = `<div class="alert alert-danger">${result.message || 'Có lỗi xảy ra khi hạ quyền User'}</div>`;
        }
    } catch (error) {
        document.getElementById('message-container').innerHTML = `<div class="alert alert-danger">Có lỗi xảy ra khi hạ quyền User</div>`;
    }
}

document.addEventListener('DOMContentLoaded', fetchUsers);
</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
