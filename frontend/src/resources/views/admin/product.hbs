<div class="container-fluid product-list">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Danh Sách Sản Phẩm</h3>
                    <div class="card-tools">
                        <a href="/admin/product/add" class="btn btn-success">Thêm mới</a>
                        <div class="d-flex gap-2 align-items-center">
                            <form id="filterForm" class="mb-4" method="GET">
                                <div class="row align-items-end">
                                    <div class="col-md-4">
                                        <label for="category" class="form-label">Danh mục</label>
                                        <select class="form-select" id="category" name="category">
                                            <option value="">Tất cả danh mục</option>
                                            {{#each categories}}
                                            <option value="{{this}}" {{#if (eq ../selectedCategory this)}}selected{{/if}}>{{this}}</option>
                                            {{/each}}
                                        </select>
                                    </div>
                                    <div class="col-md-4">
                                        <button type="button" id="filterButton" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                            Sắp xếp theo
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li><a href="#" class="dropdown-item price-filter" data-sort="asc">Giá tăng dần</a></li>
                                            <li><a href="#" class="dropdown-item price-filter" data-sort="desc">Giá giảm dần</a></li>
                                        </ul>
                                    </div>
                            </div>
                        </div>
                        <input type="hidden" name="page" value="1">
                    </form>

                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 5%">STT</th>
                                    <th style="width: 20%">Tên</th>
                                    <th style="width: 10%">Ảnh</th>
                                    <th style="width: 25%">Mô tả</th>
                                    <th style="width: 10%">Danh mục</th>
                                    <th style="width: 15%">Giá</th>
                                    <th style="width: 10%">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="product-list">
                            </tbody>
                        </table>
                    </div>

                    <div class="alert alert-info text-center mt-3" id="no-products" style="display: none;">
                        Không có sản phẩm nào
                    </div>
                </div>
                <div class="card-footer">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            {{#if (gt currentPage 1)}}
                            <li class="page-item">
                                <a class="page-link" href="?page={{subtract currentPage 1}}{{#if selectedCategory}}&category={{selectedCategory}}{{/if}}{{#if _sort}}&_sort={{_sort}}{{/if}}">Previous</a>
                            </li>
                            {{/if}}
                            
                            {{#each (range 1 totalPages)}}
                            <li class="page-item {{#if (eq this ../currentPage)}}active{{/if}}">
                                <a class="page-link" href="?page={{this}}{{#if ../selectedCategory}}&category={{../selectedCategory}}{{/if}}{{#if ../_sort}}&_sort={{../_sort}}{{/if}}">{{this}}</a>
                            </li>
                            {{/each}}
                            
                            {{#if (lt currentPage totalPages)}}
                            <li class="page-item">
                                <a class="page-link" href="?page={{sum currentPage 1}}{{#if selectedCategory}}&category={{selectedCategory}}{{/if}}{{#if _sort}}&_sort={{_sort}}{{/if}}">Next</a>
                            </li>
                            {{/if}}
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal xác nhận xóa -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Bạn có chắc chắn muốn xóa sản phẩm "<span id="productName"></span>"?</p>
                <p class="text-danger mb-0"><small>Hành động này không thể hoàn tác.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
            </div>
        </div>
    </div>
</div>

<style>
.description-cell {
    max-width: 200px;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: pointer;
}

.table th {
    background-color: #f8f9fa;
    border-bottom: 2px solid #dee2e6;
    vertical-align: middle;
}

.action-buttons {
    display: flex;
    gap: 5px;
    justify-content: center;
}

.btn-sm {
    padding: 0.25rem 0.5rem;
}

.table td {
    vertical-align: middle;
    padding: 0.5rem;
}

.product-img {
    height: 50px;
    width: auto;
    max-width: 100%;
    object-fit: contain;
    display: block;
    margin: 0 auto;
}

.text-end {
    text-align: right;
}

.text-center {
    text-align: center;
}

.gap-2 {
    gap: 0.5rem;
}

/* Thêm style cho form lọc */
.form-select {
    padding: 0.375rem 2.25rem 0.375rem 0.75rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: #212529;
    background-color: #fff;
    border: 1px solid #ced4da;
    border-radius: 0.25rem;
    transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
}

.form-select:focus {
    border-color: #86b7fe;
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba(13,110,253,.25);
}

.form-label {
    margin-bottom: 0.5rem;
    font-weight: 500;
}
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

const apiBase = 'http://localhost:3000/api';
let currentPage = 1;
let selectedCategory = '';
let sort = '';
let totalPages = 1;
let categories = [];

function fetchCategories() {
    const token = getCookie('token');
    return $.ajax({
        url: `${apiBase}/categories`,
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    }).then(res => res.data.categories);
}

function fetchProducts(page = 1, category = '', sort = '') {
    const token = getCookie('token');
    let url = `${apiBase}/products`;
    let params = { page, limit: 10 };
    if (category) {
        url = `${apiBase}/products/category/${encodeURIComponent(category)}`;
    }
    if (sort) params.sort = sort;

    return $.ajax({
        url: url,
        data: params,
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    }).then(data => {
        const tbody = document.querySelector('tbody');
        tbody.innerHTML = '';

        data.data.products.forEach((product, index) => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td class="text-center">${index + 1}</td>
                <td>${product.name}</td>
                <td>
                    <img src="${product.image}" alt="${product.name}" class="product-img">
                </td>
                <td class="description-cell" title="${product.description}">${product.description}</td>
                <td class="text-center">${product.category}</td>
                <td class="text-end">${product.price.toLocaleString('vi-VN', { style: 'currency', currency: 'VND' })}</td>
                <td>
                    <div class="action-buttons">
                        <a href="/admin/product/edit/${product._id}" class="btn btn-primary btn-sm">
                            <i class="fas fa-edit"></i>
                        </a>
                        <button class="btn btn-danger btn-sm delete-product" data-id="${product._id}" data-name="${product.name}">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </td>
            `;
            tbody.appendChild(row);
        });

        // Cập nhật phân trang
        const pagination = document.querySelector('.pagination');
        if (pagination) {
            pagination.innerHTML = '';
            
            // Nút trước
            if (page > 1) {
                const prevBtn = document.createElement('li');
                prevBtn.className = 'page-item';
                prevBtn.innerHTML = `
                    <a class="page-link" href="?page=${page - 1}${category ? `&category=${category}` : ''}${sort ? `&_sort=${sort}` : ''}">
                        Previous
                    </a>
                `;
                pagination.appendChild(prevBtn);
            }

            // Các trang
            for (let i = 1; i <= data.data.pagination.totalPages; i++) {
                const pageBtn = document.createElement('li');
                pageBtn.className = `page-item ${i === page ? 'active' : ''}`;
                pageBtn.innerHTML = `
                    <a class="page-link" href="?page=${i}${category ? `&category=${category}` : ''}${sort ? `&_sort=${sort}` : ''}">
                        ${i}
                    </a>
                `;
                pagination.appendChild(pageBtn);
            }

            // Nút sau
            if (page < data.data.pagination.totalPages) {
                const nextBtn = document.createElement('li');
                nextBtn.className = 'page-item';
                nextBtn.innerHTML = `
                    <a class="page-link" href="?page=${page + 1}${category ? `&category=${category}` : ''}${sort ? `&_sort=${sort}` : ''}">
                        Next
                    </a>
                `;
                pagination.appendChild(nextBtn);
            }
        }
    });
}

// Gọi API khi trang load
$(document).ready(function() {
    const urlParams = new URLSearchParams(window.location.search);
    currentPage = parseInt(urlParams.get('page')) || 1;
    selectedCategory = urlParams.get('category') || '';
    sort = urlParams.get('_sort') || '';

    // Lấy danh mục
    fetchCategories().then(data => {
        categories = data;
        // Cập nhật select category
        const categorySelect = $('#category');
        categorySelect.empty();
        categorySelect.append('<option value="">Tất cả danh mục</option>');
        categories.forEach(category => {
            categorySelect.append(
                `<option value="${category.name}" ${selectedCategory === category.name ? 'selected' : ''}>${category.name}</option>`
            );
        });
    });

    // Lấy sản phẩm
    fetchProducts(currentPage, selectedCategory, sort);
});

// Xử lý khi thay đổi danh mục
$('#category').on('change', function() {
    selectedCategory = $(this).val();
    currentPage = 1; // Reset về trang 1 khi thay đổi danh mục
    fetchProducts(currentPage, selectedCategory, sort);
});

// Xử lý khi thay đổi sắp xếp
$(document).on('click', '.price-filter', function(e) {
    e.preventDefault();
    const sortType = $(this).data('sort');
    if (sortType === 'asc') {
        sort = 'price';
    } else if (sortType === 'desc') {
        sort = '-price';
    } else {
        sort = '';
    }
    currentPage = 1;
    fetchProducts(currentPage, selectedCategory, sort);
    $('#filterButton').text($(this).text());
});

// Xử lý khi click nút xóa
$(document).on('click', '.delete-product', function() {
    const productId = $(this).data('id');
    const productName = $(this).data('name');
    
    if (confirm(`Bạn có chắc chắn muốn xóa sản phẩm "${productName}" không?`)) {
        const token = getCookie('token');
        $.ajax({
            url: `${apiBase}/products/${productId}`,
            type: 'DELETE',
            headers: {
                'Authorization': `Bearer ${token}`
            },
            credentials: 'include'
        })
        .done(function(response) {
            if (response.success) {
                // Tải lại dữ liệu sau khi xóa
                fetchProducts(currentPage, selectedCategory, sort);
            } else {
                alert(response.message || 'Có lỗi xảy ra khi xóa sản phẩm');
            }
        })
        .fail(function() {
            alert('Có lỗi xảy ra khi xóa sản phẩm');
        });
    }
});

// Thêm tooltip cho các ô mô tả
$(document).ready(function() {
    $('[data-toggle="tooltip"]').tooltip({
        placement: 'top'
    });
});
</script>