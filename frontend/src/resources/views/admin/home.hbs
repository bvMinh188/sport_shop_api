<div class="container-fluid">
    <div class="row">
        <div class="col-md-6 col-lg-3">
            <div class="card bg-primary text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="stats-label">Tổng số danh mục</h6>
                            <div class="stats-value">{{#if totalCategories}}{{totalCategories}}{{else}}<span class="loading">Loading...</span>{{/if}}</div>
                        </div>
                        <i class="fas fa-list fa-2x stats-icon"></i>
                    </div>
                </div>
                <a href="/admin/category" class="card-footer d-flex align-items-center justify-content-between">
                    <span>Xem chi tiết</span>
                    <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="card bg-success text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="stats-label">Tổng số sản phẩm</h6>
                            <div class="stats-value">{{#if totalProducts}}{{totalProducts}}{{else}}<span class="loading">Loading...</span>{{/if}}</div>
                        </div>
                        <i class="fas fa-box fa-2x stats-icon"></i>
                    </div>
                </div>
                <a href="/admin/product" class="card-footer d-flex align-items-center justify-content-between">
                    <span>Xem chi tiết</span>
                    <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="card bg-warning text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="stats-label">Tổng số đơn hàng</h6>
                            <div class="stats-value">{{#if totalOrders}}{{totalOrders}}{{else}}<span class="loading">Loading...</span>{{/if}}</div>
                        </div>
                        <i class="fas fa-shopping-cart fa-2x stats-icon"></i>
                    </div>
                </div>
                <a href="/admin/order" class="card-footer d-flex align-items-center justify-content-between">
                    <span>Xem chi tiết</span>
                    <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        </div>
        <div class="col-md-6 col-lg-3">
            <div class="card bg-info text-white mb-4">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="stats-label">Tổng số người dùng</h6>
                            <div class="stats-value">{{#if totalUsers}}{{totalUsers}}{{else}}<span class="loading">Loading...</span>{{/if}}</div>
                        </div>
                        <i class="fas fa-users fa-2x stats-icon"></i>
                    </div>
                </div>
                <a href="/admin/users" class="card-footer d-flex align-items-center justify-content-between">
                    <span>Xem chi tiết</span>
                    <i class="fas fa-arrow-right"></i>
                </a>
            </div>
        </div>
    </div>
</div>

<style>
.card {
    border: none;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease;
    height: 100%;
}

.card:hover {
    transform: translateY(-5px);
}

.card-body {
    padding: 1.5rem;
}

.stats-label {
    font-size: 1rem;
    margin-bottom: 0.5rem;
    opacity: 0.9;
}

.stats-value {
    font-size: 2rem;
    font-weight: bold;
}

.stats-icon {
    opacity: 0.7;
}

.card-footer {
    background: rgba(0, 0, 0, 0.1);
    border-top: none;
    padding: 1rem 1.5rem;
    color: white;
    text-decoration: none;
}

.card-footer:hover {
    background: rgba(0, 0, 0, 0.2);
    text-decoration: none;
    color: white;
}

.bg-primary { background: #007bff !important; }
.bg-success { background: #28a745 !important; }
.bg-warning { background: #ffc107 !important; }
.bg-info { background: #17a2b8 !important; }

@media (max-width: 768px) {
    .card {
        margin-bottom: 1rem;
    }
}
</style>

<script>
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

document.addEventListener('DOMContentLoaded', function() {
    const token = getCookie('token');

    // Fetch total categories
    fetch('http://localhost:3000/api/totalcategories', {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data) {
                document.querySelectorAll('.stats-value')[0].textContent = data.data.totalCategories;
            }
        })
        .catch(error => console.error('Error:', error));

    // Fetch total products
    fetch('http://localhost:3000/api/totalproducts', {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data) {
                document.querySelectorAll('.stats-value')[1].textContent = data.data.totalProducts;
            }
        })
        .catch(error => console.error('Error:', error));

    // Fetch total orders
    fetch('http://localhost:3000/api/totalorders', {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data) {
                document.querySelectorAll('.stats-value')[2].textContent = data.data.totalOrders;
            }
        })
        .catch(error => console.error('Error:', error));

    // Fetch total users
    fetch('http://localhost:3000/api/totalusers', {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data) {
                document.querySelectorAll('.stats-value')[3].textContent = data.data.totalUsers;
            }
        })
        .catch(error => console.error('Error:', error));
});
</script> 