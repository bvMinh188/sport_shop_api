<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Danh Sách Danh Mục</h3>
                    <div class="card-tools">
                        <a href="/admin/category/add" class="btn btn-success">Thêm mới</a>
                    </div>
                </div>
                <div class="card-body">
                    {{#if error}}
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        {{error}}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    {{/if}}

                    <div class="table-responsive">
                        <table class="table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width: 10%">STT</th>
                                    <th style="width: 60%">Tên danh mục</th>
                                    <th style="width: 30%">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody id="categories-tbody">
                                {{#each categories}}
                                <tr>
                                    <td>{{@index}}</td>
                                    <td>{{this.name}}</td>
                                    <td>
                                        <a href="/admin/category/edit/{{this._id}}" class="btn btn-sm btn-primary me-2">Sửa</a>
                                        <button class="btn btn-sm btn-danger delete-category" data-id="{{this._id}}" data-name="{{this.name}}">Xóa</button>
                                    </td>
                                </tr>
                                {{/each}}
                            </tbody>
                        </table>
                    </div>

                    <!-- Modal Xác nhận xóa -->
                    <div class="modal fade" id="deleteCategoryModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Xác nhận xóa</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body">
                                    <p>Bạn có chắc chắn muốn xóa danh mục "<span id="categoryName"></span>" không?</p>
                                    <p class="text-danger">Lưu ý: Nếu danh mục này đang có sản phẩm, bạn không thể xóa.</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                                    <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
                                </div>
                            </div>
                        </div>
                    </div>
{{!-- 
                    {{#unless categories}}
                    <div class="alert alert-info text-center mt-3">
                        Không có danh mục nào
                    </div>
                    {{/unless}} --}}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) return parts.pop().split(';').shift();
    return null;
}

document.addEventListener('DOMContentLoaded', function() {
    // Xử lý click nút xóa
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('delete-category')) {
            const categoryId = e.target.dataset.id;
            const categoryName = e.target.dataset.name;
            
            // Hiển thị modal
            const modal = new bootstrap.Modal(document.getElementById('deleteCategoryModal'));
            document.getElementById('categoryName').textContent = categoryName;
            document.getElementById('confirmDelete').onclick = async function() {
                try {
                    const response = await fetch(`http://localhost:3000/api/categories/${categoryId}`, {
                        method: 'DELETE',
                        headers: {
                            'Authorization': `Bearer ${token}`
                        },
                        credentials: 'include'
                    });

                    const result = await response.json();
                    
                    if (result.success) {
                        // Xóa dòng khỏi table
                        e.target.closest('tr').remove();
                        showMessage('success', 'Đã xóa danh mục thành công');
                        modal.hide();
                    } else {
                        showMessage('error', result.message || 'Không thể xóa danh mục');
                        modal.hide();
                    }
                } catch (error) {
                    console.error('Error deleting category:', error);
                    showMessage('error', 'Có lỗi xảy ra khi xóa danh mục');
                    modal.hide();
                }
            };
            
            modal.show();
        }
    });

    // Lấy danh sách danh mục từ API
    // Lấy danh sách danh mục từ API
    const token = getCookie('token');
    
    // Function to show message
    function showMessage(type, message) {
        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
        alertDiv.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        document.querySelector('.card-body').insertBefore(alertDiv, document.querySelector('.table-responsive'));
        
        // Auto hide after 5 seconds
        setTimeout(() => {
            alertDiv.classList.add('d-none');
        }, 5000);
    }

    fetch('http://localhost:3000/api/categories', {
        headers: {
            'Authorization': `Bearer ${token}`
        },
        credentials: 'include'
    })
        .then(response => response.json())
        .then(data => {
            if (data.success && data.data.categories) {
                const tbody = document.getElementById('categories-tbody');
                const categories = data.data.categories;
                
                // Xóa các hàng hiện tại
                tbody.innerHTML = '';
                
                // Thêm các hàng mới
                categories.forEach((category, index) => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td class="text-center">${index + 1}</td>
                        <td>${category.name}</td>
                        <td>
                            <div class="action-buttons">
                                <a href="/admin/category/edit/${category._id}" class="btn btn-primary btn-sm">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button class="btn btn-danger btn-sm delete-category" data-id="${category._id}" data-name="${category.name}">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
            }
        })
        .catch(error => {
            console.error('Error fetching categories:', error);
        });

    // Xử lý khi click nút xóa
    document.querySelectorAll('.delete-category').forEach(button => {
        button.addEventListener('click', function() {
            const categoryId = this.dataset.id;
            const categoryName = this.dataset.name;
            
            if (confirm(`Bạn có chắc chắn muốn xóa danh mục "${categoryName}" không?`)) {
                fetch(`http://localhost:3000/api/categories/${categoryId}`, {
                    method: 'DELETE',
                    headers: {
                        'Authorization': `Bearer ${token}`
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload(); // Tải lại trang sau khi xóa thành công
                    } else {
                        alert(data.message || 'Có lỗi xảy ra khi xóa danh mục');
                    }
                })
                .catch(error => {
                    console.error('Error deleting category:', error);
                    alert('Có lỗi xảy ra khi xóa danh mục');
                });
            }
        });
    });
});
</script> 