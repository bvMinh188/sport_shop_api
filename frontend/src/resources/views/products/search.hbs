<div class="container mt-5 pt-5">
    <div class="row">
        <div class="col-12">
            <h3 class="mb-4" id="search-title">Kết quả tìm kiếm</h3>
            
            <!-- Nút lọc theo giá -->
            <div class="btn-group mb-4">
                <button type="button" id="filterButton" class="btn btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    Lọc
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li><a href="#" class="dropdown-item price-filter" data-sort="asc">Giá tăng dần</a></li>
                    <li><a href="#" class="dropdown-item price-filter" data-sort="desc">Giá giảm dần</a></li>
                </ul>
            </div>
            <!-- Product Grid -->
            <div class="row" id="product-list">
                <!-- Sản phẩm sẽ render bằng JS -->
            </div>

            <!-- Pagination -->
            <div class="pagination-container text-center mt-4">
                <ul class="pagination" id="pagination">
                    <!-- Phân trang sẽ render bằng JS -->
                </ul>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const apiBase = 'http://localhost:3000/api';
    let currentPage = 1;
    let sort = '';
    let totalPages = 1;
    let searchQuery = new URLSearchParams(window.location.search).get('q') || '';

    // Địa chỉ giao hàng
    const shippingAddresses = {
        address1: '123 Đường A, Quận B, TP. C',
        address2: '456 Đường X, Quận Y, TP. Z',
        address3: '789 Đường M, Quận N, TP. P'
    };

    function fetchProducts(page = 1, sort = '') {
        let params = { 
            page, 
            limit: 12,
            q: searchQuery
        };
        if (sort) params.sort = sort;
        return $.get(`${apiBase}/products/search`, params).then(res => res.data);
    }

    function renderProducts(products) {
        let html = '';
        if (!products.length) {
            html = `
                <div class="col-12 text-center py-5">
                    <i class="fas fa-search fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">Không tìm thấy sản phẩm nào phù hợp</h5>
                    <a href="/" class="btn btn-danger mt-3">Quay lại trang chủ</a>
                </div>`;
        } else {
            products.forEach(product => {
                html += `<div class="col-md-3 mb-4">
                    <div class="product-card position-relative">
                        <a href="/products/${product._id}" class="product-link">
                            <div class="product-image-container">
                                <img src="${product.image}" alt="${product.name}" class="product-image">
                            </div>
                        </a>
                        <div class="product-info">
                            <h5 class="product-title">${product.name}</h5>
                            <div class="product-price">
                                <span class="current-price">${formatPrince(product.price)}</span>
                                ${product.originalPrice ? `<span class="original-price">${formatPrince(product.originalPrice)}</span>` : ''}
                            </div>
                            <div class="sold-count">Đã bán: ${product.sold}</div>
                        </div>
                    </div>
                </div>`;
            });
        }
        $('#product-list').html(html);
    }

    function renderPagination(current, total) {
        let html = '';
        if (total <= 1) return $('#pagination').html('');
        if (current > 1) {
            html += `<li class="page-item"><a class="page-link pagination-link" data-page="${current - 1}">❮</a></li>`;
        }
        for (let i = 1; i <= total; i++) {
            html += `<li class="page-item ${i === current ? 'active' : ''}"><a class="page-link pagination-link" data-page="${i}">${i}</a></li>`;
        }
        if (current < total) {
            html += `<li class="page-item"><a class="page-link pagination-link" data-page="${current + 1}">❯</a></li>`;
        }
        $('#pagination').html(html);
    }

    function formatPrince(price) {
        return price ? Number(price).toLocaleString('vi-VN', { style: 'currency', currency: 'VND' }) : '';
    }

    function loadAll() {
        if (!searchQuery) {
            window.location.href = '/';
            return;
        }
        $('#search-title').text(`Kết quả tìm kiếm cho "${searchQuery}"`);
        fetchProducts(currentPage, sort).then(data => {
            renderProducts(data.products);
            totalPages = data.pagination.totalPages;
            renderPagination(currentPage, totalPages);
        });
    }

    $(document).ready(function () {
        // Cập nhật địa chỉ giao hàng khi chọn thay đổi
        $('#shippingAddressSelect').change(function() {
            const selectedValue = $(this).val();
            $('#currentShippingAddress').text(shippingAddresses[selectedValue]);
        });

        loadAll();

        // Lọc theo giá
        $(document).on('click', '.price-filter', function (e) {
            e.preventDefault();
            const sortType = $(this).data('sort');
            if (sortType === 'asc') {
                sort = 'price';
            } else if (sortType === 'desc') {
                sort = '-price';
            } else {
                sort = '';
            }
            currentPage = 1;
            loadAll();
            $('#filterButton').text($(this).text());
        });

        // Phân trang
        $(document).on('click', '.pagination-link', function (e) {
            e.preventDefault();
            currentPage = parseInt($(this).data('page'));
            loadAll();
        });
    });
</script>

<style>
.product-card {
    border: 1px solid #dee2e6;
    border-radius: 8px;
    overflow: hidden;
    transition: transform 0.2s, box-shadow 0.2s;
    background: white;
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.product-image-container {
    position: relative;
    padding-top: 100%;
    overflow: hidden;
}

.product-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-info {
    padding: 1rem;
    background: white;
}

.product-title {
    font-size: 0.9rem;
    margin-bottom: 0.5rem;
    height: 2.4rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.product-price {
    font-weight: bold;
    font-size: 1.1rem;
}

.original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 0.9rem;
    margin-left: 0.5rem;
}

.sold-count {
    font-size: 0.8rem;
    color: #666;
    margin-top: 0.5rem;
}
</style>

{{> footer}} 